app PersonalisedLearningPlatform {
  wasp: {
    version: "^0.11.1"
  },
  title: "PersonalisedLearningPlatform",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id         Int          @id @default(autoincrement())
    username   String       @unique
    password   String
    Course     Course[]
    Assessment Assessment[]
    UserCourse UserCourse[]
psl=}

entity Course {=psl
    id          Int          @id @default(autoincrement())
    title       String
    description String
    content     String
    userId      Int
    user        User         @relation(fields: [userId], references: [id])
    UserCourse  UserCourse[]
psl=}

entity Assessment {=psl
    id       Int    @id @default(autoincrement())
    userId   Int
    user     User   @relation(fields: [userId], references: [id])
    question String
    answer   String
    score    Int
psl=}

entity UserCourse {=psl
    id       Int    @id @default(autoincrement())
    userId   Int
    user     User   @relation(fields: [userId], references: [id])
    courseId Int
    course   Course @relation(fields: [courseId], references: [id])
psl=}

action createCourse {
  fn: import { createCourse } from "@server/actions.js",
  entities: [Course]
}

action createAssessment {
  fn: import { createAssessment } from "@server/actions.js",
  entities: [Assessment]
}

action addUserCourse {
  fn: import { addUserCourse } from "@server/actions.js",
  entities: [UserCourse]
}

query getUserCourses {
  fn: import { getUserCourses } from "@server/queries.js",
  entities: [UserCourse, Course]
}

query getUserAssessments {
  fn: import { getUserAssessments } from "@server/queries.js",
  entities: [Assessment]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { DashboardPage } from "@client/pages/Dashboard.jsx",
  authRequired: true
}

route CourseRoute { path: "/course/:courseId", to: CoursePage }
page CoursePage {
  component: import { CoursePage } from "@client/pages/Course.jsx",
  authRequired: true
}

route AssessmentRoute { path: "/assessment/:assessmentId", to: AssessmentPage }
page AssessmentPage {
  component: import { AssessmentPage } from "@client/pages/Assessment.jsx",
  authRequired: true
}
